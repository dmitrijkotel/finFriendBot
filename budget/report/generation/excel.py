import sqlite3
import pandas as pd
import io

def export_budget_to_excel(budget_id):
    try:
        with sqlite3.connect('database.db') as db:
            cursor = db.cursor()

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—é–¥–∂–µ—Ç–µ
            cursor.execute("""
                SELECT budget_name, description, created_at 
                FROM budgets 
                WHERE id = ?
            """, (budget_id,))
            budget = cursor.fetchone()

            if not budget:
                print(f"–ë—é–¥–∂–µ—Ç —Å ID {budget_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return None
            
            budget_name, description, created_at = budget

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –∏—Ö —Å—É–º–º–∞—Ä–Ω—ã–º–∏ –¥–æ—Ö–æ–¥–∞–º–∏/—Ä–∞—Å—Ö–æ–¥–∞–º–∏
            cursor.execute("""
                SELECT c.name, c.type, COALESCE(SUM(t.amount), 0) 
                FROM categories c
                LEFT JOIN transactions t ON c.id = t.category_id
                WHERE c.budget_id = ?
                GROUP BY c.id
            """, (budget_id,))
            categories_summary = cursor.fetchall()

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
            cursor.execute("""
                SELECT c.name AS category_name, 
                       t.amount * CASE WHEN c.type = 'expense' THEN -1 ELSE 1 END AS amount, 
                       t.date, 
                       t.description, 
                       c.type
                FROM transactions t
                JOIN categories c ON t.category_id = c.id
                WHERE c.budget_id = ?
                ORDER BY c.type, c.name, t.date
            """, (budget_id,))
            transactions = cursor.fetchall()

            # –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –¥–æ—Ö–æ–¥–∞ –∏ —Ä–∞—Å—Ö–æ–¥–∞
            total_income = sum(amount for _, ttype, amount in categories_summary if ttype == 'income')
            total_expense = sum(amount for _, ttype, amount in categories_summary if ttype == 'expense')  # –£–±—Ä–∞–ª–∏ –ª–∏—à–Ω–∏–π –º–∏–Ω—É—Å
            balance = total_income - total_expense

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å –æ—Ç—á–µ—Ç–æ–º
        data = [
            ["–ù–∞–∑–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞:", budget_name],
            ["–û–ø–∏—Å–∞–Ω–∏–µ:", description],
            ["–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:", created_at],
            ["", ""],  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        ]

        income_start = len(data)
        data.append(["üí∞ –î–û–•–û–î–´", "", "", ""])  

        for category, category_type, category_total in categories_summary:
            if category_type == 'income':
                data.append([f"{category} (–í—Å–µ–≥–æ: {category_total})", "", "", ""])
                data.append(["–°—É–º–º–∞", "–î–∞—Ç–∞", "–û–ø–∏—Å–∞–Ω–∏–µ"])
                for c_name, amount, date, desc, ttype in transactions:
                    if c_name == category and ttype == 'income':
                        data.append([amount, date, desc])
                data.append(["", ""])  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

        expense_start = len(data)
        data.append(["üí∏ –†–ê–°–•–û–î–´", "", "", ""])  

        for category, category_type, category_total in categories_summary:
            if category_type == 'expense':
                data.append([f"{category} (–í—Å–µ–≥–æ: {category_total})", "", "", ""])  # –£–±—Ä–∞–ª–∏ –ª–∏—à–Ω–∏–π –º–∏–Ω—É—Å
                data.append(["–°—É–º–º–∞", "–î–∞—Ç–∞", "–û–ø–∏—Å–∞–Ω–∏–µ"])
                for c_name, amount, date, desc, ttype in transactions:
                    if c_name == category and ttype == 'expense':
                        data.append([amount, date, desc])
                data.append(["", ""])  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

        total_start = len(data)
        data.append(["üìä –ò–¢–û–ì", "–°—É–º–º–∞"])
        data.append(["–û–±—â–∏–π –¥–æ—Ö–æ–¥:", total_income])
        data.append(["–û–±—â–∏–π —Ä–∞—Å—Ö–æ–¥:", total_expense])  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
        data.append(["–ë–∞–ª–∞–Ω—Å:", balance])

        df_report = pd.DataFrame(data)

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –ø–∞–º—è—Ç–∏
        output = io.BytesIO()

        with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
            df_report.to_excel(writer, sheet_name='–ë—é–¥–∂–µ—Ç–Ω—ã–π –æ—Ç—á–µ—Ç', index=False, header=False)

            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            workbook = writer.book
            worksheet = writer.sheets['–ë—é–¥–∂–µ—Ç–Ω—ã–π –æ—Ç—á–µ—Ç']

            # –§–æ—Ä–º–∞—Ç—ã
            bold_format = workbook.add_format({'bold': True, 'font_size': 12})
            header_format = workbook.add_format({'bold': True, 'bg_color': '#DCE6F1', 'border': 1})
            category_format = workbook.add_format({'bold': True, 'font_size': 11, 'bg_color': '#F4B084', 'border': 1})
            money_format = workbook.add_format({'num_format': '#,##0.00', 'font_color': 'green', 'border': 1})
            money_negative_format = workbook.add_format({'num_format': '#,##0.00', 'font_color': 'red', 'border': 1})  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
            total_expense_format = workbook.add_format({'bold': True, 'font_color': 'red', 'font_size': 12})  # –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
            date_format = workbook.add_format({'num_format': 'dd.mm.yyyy', 'border': 1})
            border_format = workbook.add_format({'border': 1})
            black_text_format = workbook.add_format({'font_color': 'black', 'bold': True})  # –ß–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç

            # –®–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫
            worksheet.set_column('A:A', 30)  # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ / –æ–ø–∏—Å–∞–Ω–∏–µ
            worksheet.set_column('B:B', 15, money_format)  # –°—É–º–º–∞
            worksheet.set_column('C:C', 35, date_format)  # –î–∞—Ç–∞
            worksheet.set_column('D:D', 40)  # –û–ø–∏—Å–∞–Ω–∏–µ

            # –î–µ–ª–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –±—é–¥–∂–µ—Ç–µ —á–µ—Ä–Ω—ã–º–∏
            worksheet.write('A1', "–ù–∞–∑–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞:", black_text_format)
            worksheet.write('B1', budget_name, black_text_format)

            worksheet.write('A2', "–û–ø–∏—Å–∞–Ω–∏–µ:", black_text_format)
            worksheet.write('B2', description, black_text_format)

            worksheet.write('A3', "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:", black_text_format)
            worksheet.write('B3', created_at, black_text_format)

            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            worksheet.write(f'A{income_start + 1}', 'üí∞ –î–û–•–û–î–´', bold_format)
            worksheet.write(f'A{expense_start + 1}', 'üí∏ –†–ê–°–•–û–î–´', bold_format)
            worksheet.write(f'A{total_start + 1}', 'üìä –ò–¢–û–ì', bold_format)

            # –í—ã–¥–µ–ª—è–µ–º –æ–±—â–∏–π —Ä–∞—Å—Ö–æ–¥ –∫—Ä–∞—Å–Ω—ã–º
            worksheet.write(f'B{total_start + 3}', total_expense, total_expense_format)

            # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å —Ä–∞–º–∫–∞–º–∏
            row = income_start + 2
            for category, category_type, category_total in categories_summary:
                if category_type == 'income':
                    worksheet.write(f'A{row}', f"{category} (–í—Å–µ–≥–æ: {category_total})", category_format)
                    row += 1
                    worksheet.write(f'A{row}', "–°—É–º–º–∞", header_format)
                    worksheet.write(f'B{row}', "–î–∞—Ç–∞", header_format)
                    worksheet.write(f'C{row}', "–û–ø–∏—Å–∞–Ω–∏–µ", header_format)
                    row += 1
                    for c_name, amount, date, desc, ttype in transactions:
                        if c_name == category and ttype == 'income':
                            worksheet.write(f'A{row}', amount, money_format)
                            worksheet.write(f'B{row}', date, date_format)
                            worksheet.write(f'C{row}', desc, border_format)
                            row += 1
                    row += 1  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞

            row = expense_start + 2
            for category, category_type, category_total in categories_summary:
                if category_type == 'expense':
                    worksheet.write(f'A{row}', f"{category} (–í—Å–µ–≥–æ: {category_total})", category_format)
                    row += 1
                    worksheet.write(f'A{row}', "–°—É–º–º–∞", header_format)
                    worksheet.write(f'B{row}', "–î–∞—Ç–∞", header_format)
                    worksheet.write(f'C{row}', "–û–ø–∏—Å–∞–Ω–∏–µ", header_format)
                    row += 1
                    for c_name, amount, date, desc, ttype in transactions:
                        if c_name == category and ttype == 'expense':
                            worksheet.write(f'A{row}', amount, money_negative_format)
                            worksheet.write(f'B{row}', date, date_format)
                            worksheet.write(f'C{row}', desc, border_format)
                            row += 1
                    row += 1  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞

        output.seek(0)
        return output

    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        return None
