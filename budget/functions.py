from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from budget.keyboards import (
    edit_budget_keyboard, back_edit_name_budget_keyboard,
    back_edit_description_budget_keyboard, back_complete_edit_name_keyboard
)
from budget.database import delete_budget_db, set_new_budget_name, set_new_budget_description


async def delete_budget_function(callback: CallbackQuery, budget_id):
    if budget_id is None:
        await callback.answer("–í—ã–±–µ—Ä–∏—Ç–µ –±—é–¥–∂–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.", show_alert=True)
        return

    await callback.answer()
    await delete_budget_db(budget_id, callback.message)  # –£–¥–∞–ª—è–µ–º –±—é–¥–∂–µ—Ç


async def edit_budget_function(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text("–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?", reply_markup=edit_budget_keyboard)


async def create_keyboard(budgets):
    keyboard = InlineKeyboardBuilder()
    back = InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_button")

    for budget_id, budget_name in budgets:
        button = InlineKeyboardButton(text=budget_name, callback_data=str(budget_id))
        keyboard.add(button)

    keyboard.add(back)
    return keyboard.adjust(1).as_markup()  # –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ


async def edit_name_budget_function(callback: CallbackQuery, state: FSMContext, edit_budget_states):
    bot_message = await callback.message.edit_text("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞:", reply_markup=back_edit_name_budget_keyboard)
    await state.update_data(bot_message_id=bot_message.message_id)
    await state.set_state(edit_budget_states.waiting_for_new_name)
    await callback.answer()


async def process_edit_budget_name_function(message: Message, state: FSMContext, budget_id):
    budget_name = message.text
    await state.update_data(budget_name=budget_name)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    user_data = await state.get_data()
    bot_message_id = user_data.get("bot_message_id")
    await message.bot.delete_message(chat_id=message.chat.id, message_id=bot_message_id)

    await set_new_budget_name(message, budget_name, budget_id)
    await state.clear()  # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è


async def edit_description_budget_function(callback: CallbackQuery, state: FSMContext, edit_budget_states):
    bot_message = await callback.message.edit_text("üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞:", reply_markup=back_edit_description_budget_keyboard)
    await state.update_data(bot_message_id=bot_message.message_id)
    await state.set_state(edit_budget_states.waiting_for_budget_new_description)
    await callback.answer()


async def process_edit_budget_description_function(message: Message, state: FSMContext, budget_id):
    budget_description = message.text
    await state.update_data(budget_description=budget_description)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
    await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    user_data = await state.get_data()
    bot_message_id = user_data.get("bot_message_id")

    if budget_id is not None:
        await set_new_budget_description(message, budget_description, budget_id, bot_message_id)
    else:
        await message.bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=bot_message_id,
            text="‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±—é–¥–∂–µ—Ç–∞. –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.",
            reply_markup=back_edit_description_budget_keyboard
        )

    await state.clear()  # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è